Sentimientos_nrc_2 <- Sentimientos_nrc |>
summarise_all(sum)
Sentimientos_nrc_2
get_nrc_sentiment {syuzhet}
?summarise_all
View(Sentimientos_nrc_2)
Sentimientos_nrc |>
summarise_all(sum) |>
ggplot(aes(x = var(),y=sum())) +
geom_bar(aes(fill=sentiment),stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete 'tm'") +
theme(legend.position = "none")
Sentimientos_nrc_2
Sentimientos_nrc |>
summarise_all(sum) |>
ggplot(aes(x = var(),y=sum())) +
geom_bar(aes(fill=sentiment),stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete 'tm'") +
theme(legend.position = "none")
Sentimientos_nrc_2
Sentimientos_nrc |>
summarise_all(sum) |>
ggplot(aes(x = var,y=sum) +
geom_bar(aes(fill=sentiment),stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete 'tm'") +
theme(legend.position = "none")
Sentimientos_nrc_2
Sentimientos_nrc |>
summarise_all(sum) |>
ggplot(aes(x = var,y=sum) +
geom_bar(aes(fill=sentiment),stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete 'tm'") +
theme(legend.position = "none")
Sentimientos_nrc_2
Sentimientos_nrc |>
summarise_all(sum) |>
ggplot(aes(x = var,y=sum)) +
geom_bar(aes(fill=sentiment),stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete 'tm'") +
theme(legend.position = "none")
Sentimientos_nrc |>
summarise_all(sum) |>
ggplot(aes(x = var,y=sum)) +
geom_bar(aes(fill=sum),stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete 'tm'") +
theme(legend.position = "none")
Sentimientos_nrc |>
summarise_all(sum) |>
ggplot(aes(x = var,y=sum)) +
geom_bar(aes(fill=var),stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete 'tm'") +
theme(legend.position = "none")
Sentimientos_nrc |>
summarise_all(sum) |>
gather(key=Sentimiento, value=Number) |>
ggplot(aes(x=Sentimiento,fill=Sentimiento)) +
geom_bar(aes(x = Sentimiento, y = Number), position = "dodge", stat = "identity")
Sentimientos_nrc |>
summarise_all(sum) |>
gather(key=Sentimiento, value=Number) |>
ggplot(aes(x=Sentimiento,fill=Sentimiento)) +
geom_bar(aes(x = Sentimiento, y = Number), position = "dodge", stat = "identity") +
theme(legend.position = "none")
Sentimientos_nrc |>
summarise_all(sum) |>
gather(key=Sentimiento, value=Number) |>
ggplot(aes(x=Sentimiento,fill=Sentimiento)) +
geom_bar(aes(x = Sentimiento, y = Number), position = "dodge", stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete {syuzhet}")
theme(legend.position = "none")
Sentimientos_nrc |>
summarise_all(sum) |>
gather(key=Sentimiento, value=Number) |>
ggplot(aes(x=Sentimiento,fill=Sentimiento)) +
geom_bar(aes(x = Sentimiento, y = Number), position = "dodge", stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete {syuzhet}") +
theme(legend.position = "none")
install.packages("swirl")
Sentimientos_nrc
glimpse(Sentimientos_nrc)
?get_nrc_sentiment
View(Sentimientos_nrc)
Cavero_angry <- which(Sentimientos_nrc$anger > 0)
s_v[Cavero_angry]
Cavero_angry <- which(Sentimientos_nrc$anger > 0)
Cavero_Text[Cavero_angry]
Cavero_joy <- which(Sentimientos_nrc$joy > 0)
Cavero_Text[Cavero_joy]
Cavero_joy <- which(Sentimientos_nrc$joy > 0)
Cavero_Text[Cavero_joy]
Cavero_joy <- which(Sentimientos_nrc$joy > 0)
Cavero_Text[Cavero_joy]
Sentimientos_nrc |>
summarise_all(sum) |>
gather(key=Sentimiento, value=Number) |>
ggplot(aes(x=Sentimiento,fill=Sentimiento)) +
geom_bar(aes(x = Sentimiento, y = Number), position = "dodge", stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete {syuzhet}") +
theme(legend.position = "none")
Cavero_surprise <- which(Sentimientos_nrc$surprise > 0)
Cavero_Text[Cavero_surprise]
Cavero_angry <- which(Sentimientos_nrc$anger > 0)
Cavero_Text[Cavero_angry]
Cavero_surprise <- which(Sentimientos_nrc$surprise > 0)
Cavero_Text[Cavero_surprise]
install.packages("lda")
require(lda)
corpusLDA <- lexicalize(Corpus)
ldaModel=lda.collapsed.gibbs.sampler(corpusLDA$documents,K=5,vocab=corpusLDA$vocab,burnin=9999,num.iterations=1000,alpha=0.7,eta=0.1)
top.words <- top.topic.words(ldaModel$topics, 8, by.score=TRUE)
print(top.words)
?lexicalize
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: Librerías
library(rtweet)
library(tidyverse)
library(twitteR)
library(ROAuth)
library(httr)
library(tm)
library(SnowballC)
library(rio)
library(wordcloud)
library(SentimentAnalysis)
library(syuzhet)
library(lda)
library(udpipe)
library(ggplot2)
# Chunk 3
Github <- "https://github.com/gisselacornejocastellano/R_NLP-Cavero/raw/main/Cavero_Tweets.csv"
Cavero_All_Tweets <- import(Github, encoding ="UTF-8")
# Chunk 4
max(Cavero_All_Tweets$created_at); min(Cavero_All_Tweets$created_at)
head(Cavero_All_Tweets$text)
# Chunk 5
Cavero_RT_Deleted <- Cavero_All_Tweets[Cavero_All_Tweets$is_retweet == 'FALSE',]
Cavero_Text <- Cavero_RT_Deleted$text
# Chunk 6
Corpus <- Corpus(VectorSource(Cavero_Text))
length(Cavero_Text)
content(Corpus[1])
# Chunk 7: Minúsculas
content(Corpus[1])
Corpus <- tm_map(Corpus,content_transformer(tolower))
content(Corpus[1])
# Chunk 8: Eliminar links
content(Corpus[1])
Quitar_URL <- function(x) gsub("http[^[:space:]]*", "", x)
Corpus <- tm_map(Corpus, content_transformer(Quitar_URL))
content(Corpus[1])
# Chunk 9: Eliminar tildes
content(Corpus[1])
Quitar_Tilde <- function(x) chartr('áéíóú','aeiou',x)
Corpus <- tm_map(Corpus, Quitar_Tilde)
content(Corpus[1])
# Chunk 10: Eliminar '?' y '¿'
content(Corpus[1])
Quitar_Interrogacion1 <- function(x) chartr('?',' ',x)
Quitar_Interrogacion2 <- function(x) chartr('¿',' ',x)
Corpus <- tm_map(Corpus, Quitar_Interrogacion1)
Corpus <- tm_map(Corpus, Quitar_Interrogacion2)
content(Corpus[1])
# Chunk 11: Eliminar '¡' y '!'
content(Corpus[1])
Quitar_Exclamacion1 <- function(x) chartr('¡',' ',x)
Quitar_Exclamacion2 <- function(x) chartr('!',' ',x)
Corpus <- tm_map(Corpus, Quitar_Exclamacion1)
Corpus <- tm_map(Corpus, Quitar_Exclamacion2)
content(Corpus[1])
# Chunk 12: Eliminar handles
content(Corpus[91])
Quitar_Usuarios <- function(x) gsub("@\\w+", "", x)
Corpus <- tm_map(Corpus, Quitar_Usuarios)
content(Corpus[91])
# Chunk 13: Eliminar números
content(Corpus[1])
Corpus <- tm_map(Corpus, removeNumbers)
content(Corpus[1])
# Chunk 14: Quitar puntuación
content(Corpus[3])
Corpus <- tm_map(Corpus, removePunctuation)
content(Corpus[3])
# Chunk 15
content(Corpus[1])
Corpus <- tm_map(Corpus, removeWords,c(stopwords("spanish")))
content(Corpus[1])
# Chunk 16: Stopwords específicos
content(Corpus[1])
Corpus <- tm_map(Corpus, removeWords,c("mas", "asi", "ser", "aqui", ""))
content(Corpus[1])
# Chunk 17
content(Corpus[1])
Corpus <- tm_map(Corpus, stripWhitespace)
content(Corpus[1])
# Chunk 18: Matriz de términos
Terminos <- TermDocumentMatrix(Corpus)
Terminos
# Chunk 19
inspect(Terminos)
# Chunk 20: Frecuencia de palabras
findFreqTerms(Terminos,lowfreq = 10) # al menos 10 veces
# Chunk 21: Matriz
Matriz <- as.matrix(Terminos)
head(Matriz)
# Chunk 22
Decreciente <- sort(rowSums(Matriz),decreasing=TRUE)
head(Decreciente)
# Chunk 23: Crear DF
Cavero_DF <- data.frame(Palabra = names(Decreciente), freq=Decreciente)
Cavero_DF
# Chunk 24
Cavero_DF2 <- Cavero_DF
hist(Cavero_DF2$freq)
Cavero_DF2 <- subset(Cavero_DF2, Cavero_DF2$freq >= 10)
Cavero_DF2
# Chunk 25
ggplot(Cavero_DF2, aes( x= Palabra, y=freq )) + geom_bar(stat="identity") +
xlab("Términos") + ylab("Frecuencia") + coord_flip() +
theme(axis.text=element_text(size=7))
# Chunk 26
barplot(Cavero_DF2[1:20,]$freq, las = 2, names.arg = Cavero_DF2[1:20,]$Palabra,
col ="brown", main ="Top 5 palabras más frecuentes",
ylab = "Palabras más frecuentes")
# Chunk 27
#head(Cavero_DF)
#Conteo_Palabras <- data.frame(freq = apply(Palabra,1,sum))
#head(Conteo_Palabras)
wordcloud(Cavero_DF$Palabra,
Cavero_DF$freq,
random.order=FALSE,
min.freq=2,
colors=brewer.pal(8, "Dark2"))
# Chunk 28
findAssocs(Terminos, c("peru"), c(0.30))
# Chunk 29
findAssocs(Terminos, c("libertad"), c(0.30))
# Chunk 30
findAssocs(Terminos, c("congreso"), c(0.30))
# Chunk 31
Cluster <- removeSparseTerms(Terminos, sparse = 0.96)
m2 <- as.matrix(Cluster)
distMatrix <- dist(scale(m2))
fit <- hclust(distMatrix, method = "ward.D")
plot(fit)
rect.hclust(fit, k = 5)
# Chunk 32
Sentimientos_tm <- analyzeSentiment(Cavero_Text,language = "spanish")
head(Sentimientos_tm)
# Chunk 33
Sentimientos_tm_df <- data.frame(Cavero_Text,
sentiment = convertToDirection(Sentimientos_tm$SentimentGI))
Sentimientos_tm_df
# Chunk 34
table(Sentimientos_tm_df$sentiment)
# Chunk 35
Sentimientos_tm_df |>
group_by(sentiment) |>
summarise(Cantidad = n() ) |>
ggplot(aes(x = sentiment,y=Cantidad)) +
geom_bar(aes(fill=sentiment),stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete {tm}") +
theme(legend.position = "none")
# Chunk 36
# Este paquete asocia textos a 8 emociones y 2 sentimientos. Tanto más excede el valor a 0, más pronunciada es la emoción o sentimiento.
lang <- "spanish"
Sentimientos_nrc <- get_nrc_sentiment(Cavero_Text, language=lang)
#Sentimientos_nrc_2 <- cbind(Cavero_Text,Sentimientos_nrc)
head(Sentimientos_nrc)
# Chunk 37
Cavero_angry <- which(Sentimientos_nrc$anger > 0)
Cavero_Text[Cavero_angry]
# Chunk 38
Sentimientos_nrc |>
summarise_all(sum) |>
gather(key=Sentimiento, value=Number) |>
ggplot(aes(x=Sentimiento,fill=Sentimiento)) +
geom_bar(aes(x = Sentimiento, y = Number), position = "dodge", stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete {syuzhet}") +
theme(legend.position = "none")
# Chunk 39
Sentimientos_nrc |>
summarise_all(sum) |>
gather(key=Sentimiento, value=Number) |>
ggplot(aes(x=Sentimiento,fill=Sentimiento)) +
geom_bar(aes(x = Sentimiento, y = Number), position = "dodge", stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete {syuzhet}") +
theme(legend.position = "none")
require(lda)
corpusLDA <- lexicalize(Corpus)
ldaModel=lda.collapsed.gibbs.sampler(corpusLDA$documents,K=5,vocab=corpusLDA$vocab,burnin=9999,num.iterations=1000,alpha=0.7,eta=0.1)
top.words <- top.topic.words(ldaModel$topics, 8, by.score=TRUE)
print(top.words)
require(lda)
corpusLDA <- lexicalize(Corpus)
ldaModel=lda.collapsed.gibbs.sampler(corpusLDA$documents,K=5,vocab=corpusLDA$vocab,burnin=9999,num.iterations=1000,alpha=0.7,eta=0.1)
top.words <- top.topic.words(ldaModel$topics, 8, by.score=TRUE)
print(top.words)
View(corpusLDA)
View(top.words)
knitr::opts_chunk$set(echo = TRUE)
Sentimientos_nrc |>
summarise_all(sum) |>
gather(key=Sentimiento, value=Number) |>
ggplot(aes(x=Sentimiento,fill=Sentimiento)) +
geom_bar(aes(x = Sentimiento, y = Number), position = "dodge", stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete {syuzhet}") +
theme(legend.position = "none")
Sentimientos_nrc |>
summarise_all(sum) |>
gather(key=Sentimiento, value=Number) |>
ggplot(aes(x=Sentimiento,fill=Sentimiento)) +
geom_bar(aes(x = Sentimiento, y = Number), position = "dodge", stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete {syuzhet}") +
theme(legend.position = "none")
Sentimientos_nrc |>
summarise_all(sum) |>
gather(key=Sentimiento, value=Number) |>
ggplot(aes(x=Sentimiento,fill=Sentimiento)) +
geom_bar(aes(x = Sentimiento, y = Number), position = "dodge", stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete {syuzhet}") +
theme(legend.position = "none")
Sentimientos_tm_df |>
group_by(sentiment) |>
summarise(Cantidad = n() ) |>
ggplot(aes(x = sentiment,y=Cantidad)) +
geom_bar(aes(fill=sentiment),stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete {tm}") +
theme(legend.position = "none")
Sentimientos_nrc |>
summarise_all(sum) |>
gather(key = Sentimiento, value = Number) |>
ggplot(aes(x = Sentimiento,fill = Sentimiento)) +
geom_bar(aes(x = Sentimiento, y = Number), position = "dodge", stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete {syuzhet}") +
theme(legend.position = "none")
rm(list=ls())
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2: Librerías
library(rtweet)
library(tidyverse)
library(twitteR)
library(ROAuth)
library(httr)
library(tm)
library(SnowballC)
library(rio)
library(wordcloud)
library(SentimentAnalysis)
library(syuzhet)
library(lda)
library(udpipe)
library(ggplot2)
# Chunk 3
Github <- "https://github.com/gisselacornejocastellano/R_NLP-Cavero/raw/main/Cavero_Tweets.csv"
Cavero_All_Tweets <- import(Github, encoding ="UTF-8")
# Chunk 4
max(Cavero_All_Tweets$created_at); min(Cavero_All_Tweets$created_at)
head(Cavero_All_Tweets$text)
# Chunk 5
Cavero_RT_Deleted <- Cavero_All_Tweets[Cavero_All_Tweets$is_retweet == 'FALSE',]
Cavero_Text <- Cavero_RT_Deleted$text
# Chunk 6
Corpus <- Corpus(VectorSource(Cavero_Text))
length(Cavero_Text)
content(Corpus[1])
# Chunk 7: Minúsculas
content(Corpus[1])
Corpus <- tm_map(Corpus,content_transformer(tolower))
content(Corpus[1])
# Chunk 8: Eliminar links
content(Corpus[1])
Quitar_URL <- function(x) gsub("http[^[:space:]]*", "", x)
Corpus <- tm_map(Corpus, content_transformer(Quitar_URL))
content(Corpus[1])
# Chunk 9: Eliminar tildes
content(Corpus[1])
Quitar_Tilde <- function(x) chartr('áéíóú','aeiou',x)
Corpus <- tm_map(Corpus, Quitar_Tilde)
content(Corpus[1])
# Chunk 10: Eliminar '?' y '¿'
content(Corpus[1])
Quitar_Interrogacion1 <- function(x) chartr('?',' ',x)
Quitar_Interrogacion2 <- function(x) chartr('¿',' ',x)
Corpus <- tm_map(Corpus, Quitar_Interrogacion1)
Corpus <- tm_map(Corpus, Quitar_Interrogacion2)
content(Corpus[1])
# Chunk 11: Eliminar '¡' y '!'
content(Corpus[1])
Quitar_Exclamacion1 <- function(x) chartr('¡',' ',x)
Quitar_Exclamacion2 <- function(x) chartr('!',' ',x)
Corpus <- tm_map(Corpus, Quitar_Exclamacion1)
Corpus <- tm_map(Corpus, Quitar_Exclamacion2)
content(Corpus[1])
# Chunk 12: Eliminar handles
content(Corpus[91])
Quitar_Usuarios <- function(x) gsub("@\\w+", "", x)
Corpus <- tm_map(Corpus, Quitar_Usuarios)
content(Corpus[91])
# Chunk 13: Eliminar números
content(Corpus[1])
Corpus <- tm_map(Corpus, removeNumbers)
content(Corpus[1])
# Chunk 14: Quitar puntuación
content(Corpus[3])
Corpus <- tm_map(Corpus, removePunctuation)
content(Corpus[3])
# Chunk 15
content(Corpus[1])
Corpus <- tm_map(Corpus, removeWords,c(stopwords("spanish")))
content(Corpus[1])
# Chunk 16: Stopwords específicos
content(Corpus[1])
Corpus <- tm_map(Corpus, removeWords,c("mas", "asi", "ser", "aqui", ""))
content(Corpus[1])
# Chunk 17
content(Corpus[1])
Corpus <- tm_map(Corpus, stripWhitespace)
content(Corpus[1])
# Chunk 18: Matriz de términos
Terminos <- TermDocumentMatrix(Corpus)
Terminos
# Chunk 19
inspect(Terminos)
# Chunk 20: Frecuencia de palabras
findFreqTerms(Terminos,lowfreq = 10) # al menos 10 veces
# Chunk 21: Matriz
Matriz <- as.matrix(Terminos)
head(Matriz)
# Chunk 22
Decreciente <- sort(rowSums(Matriz),decreasing=TRUE)
head(Decreciente)
# Chunk 23: Crear DF
Cavero_DF <- data.frame(Palabra = names(Decreciente), freq=Decreciente)
Cavero_DF
# Chunk 24
Cavero_DF2 <- Cavero_DF
hist(Cavero_DF2$freq)
Cavero_DF2 <- subset(Cavero_DF2, Cavero_DF2$freq >= 10)
Cavero_DF2
# Chunk 25
ggplot(Cavero_DF2, aes( x= Palabra, y=freq )) + geom_bar(stat="identity") +
xlab("Términos") + ylab("Frecuencia") + coord_flip() +
theme(axis.text=element_text(size=7))
# Chunk 26
barplot(Cavero_DF2[1:20,]$freq, las = 2, names.arg = Cavero_DF2[1:20,]$Palabra,
col ="brown", main ="Top 5 palabras más frecuentes",
ylab = "Palabras más frecuentes")
# Chunk 27
#head(Cavero_DF)
#Conteo_Palabras <- data.frame(freq = apply(Palabra,1,sum))
#head(Conteo_Palabras)
wordcloud(Cavero_DF$Palabra,
Cavero_DF$freq,
random.order=FALSE,
min.freq=2,
colors=brewer.pal(8, "Dark2"))
# Chunk 28
findAssocs(Terminos, c("peru"), c(0.30))
# Chunk 29
findAssocs(Terminos, c("libertad"), c(0.30))
# Chunk 30
findAssocs(Terminos, c("congreso"), c(0.30))
# Chunk 31
Cluster <- removeSparseTerms(Terminos, sparse = 0.96)
m2 <- as.matrix(Cluster)
distMatrix <- dist(scale(m2))
fit <- hclust(distMatrix, method = "ward.D")
plot(fit)
rect.hclust(fit, k = 5)
# Chunk 32
Sentimientos_tm <- analyzeSentiment(Cavero_Text,language = "spanish")
head(Sentimientos_tm)
# Chunk 33
Sentimientos_tm_df <- data.frame(Cavero_Text,
sentiment = convertToDirection(Sentimientos_tm$SentimentGI))
Sentimientos_tm_df
# Chunk 34
table(Sentimientos_tm_df$sentiment)
# Chunk 35
Sentimientos_tm_df |>
group_by(sentiment) |>
summarise(Cantidad = n() ) |>
ggplot(aes(x = sentiment,y=Cantidad)) +
geom_bar(aes(fill=sentiment),stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete {tm}") +
theme(legend.position = "none")
# Chunk 36
# Este paquete asocia textos a 8 emociones y 2 sentimientos. Tanto más excede el valor a 0, más pronunciada es la emoción o sentimiento.
lang <- "spanish"
Sentimientos_nrc <- get_nrc_sentiment(Cavero_Text, language = lang)
#Sentimientos_nrc_2 <- cbind(Cavero_Text,Sentimientos_nrc)
head(Sentimientos_nrc)
# Chunk 37
Cavero_angry <- which(Sentimientos_nrc$anger > 0)
Cavero_Text[Cavero_angry]
# Chunk 38
Sentimientos_nrc |>
summarise_all(sum) |>
gather(key = Sentimiento, value = Number) |>
ggplot(aes(x = Sentimiento,fill = Sentimiento)) +
geom_bar(aes(x = Sentimiento, y = Number), position = "dodge", stat = "identity") +
xlab("Sentimientos") + ylab("Cantidad") + ggtitle("Sentimentos de A. Cavero, según paquete {syuzhet}") +
theme(legend.position = "none")
# Chunk 39
# Chunk 40
require(lda)
corpusLDA <- lexicalize(Corpus)
ldaModel=lda.collapsed.gibbs.sampler(corpusLDA$documents,K=5,vocab=corpusLDA$vocab,burnin=9999,num.iterations=1000,alpha=0.7,eta=0.1)
top.words <- top.topic.words(ldaModel$topics, 8, by.score=TRUE)
print(top.words)
